<diagram program="umletino" version="15.1"><zoom_level>4</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>644</x><y>473</y><w>268</w><h>80</h></coordinates><panel_attributes>
*Owner*

--
- pendingBookingRequests : ArrayList&lt;BookingRequest&gt;

--
+ addToPending(booking_request : BookingRequest) : void
+ removeFromPending(booking_request : BookingRequest) : void
+ confirmBookingRequest(booking_request : BookingRequest) : void
+ declineBookingRequest(booking_request : BookingRequest) : void
+ addListing(ap : Apartement, title : String, desc : String, price : double, promoted : boolean, photos : String[]) : Listing
+ getBookingRequests() : ArrayList&lt;BookingRequest&gt;
+ setBookingRequests(bookingRequests : ArrayList&lt;BookingRequest&gt;) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>428</x><y>225</y><w>148</w><h>176</h></coordinates><panel_attributes>
*User*

--
_- last_tenant_ID : String_
_- last_owner_ID : String_
- id : String
- firstName : String
- lastName : String
- email : EmailAddress
- password : Password
- creditCard : CreditCard
- acc_bday : Date

--
+ getId() : String
+ setId(type : String) : void
+ getFirstName() : String
+ setFirstName(firstName : String) : void
+ getLastName() : String
+ setLastName(lastName : String) : void
+ getEmail() : EmailAddress
+ setEmail(email : EmailAddress) : void
+ getPassword() : Password
+ setPassword(password : Password) : void
+ getCreditCard() : CreditCard
+ setCreditCard(creditCard : CreditCard) : void
+ getAcc_bday() : Date
+ setAcc_bday(acc_bday : Date) : void
+ getAllDetails() : String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>156</x><y>597</y><w>144</w><h>192</h></coordinates><panel_attributes>
*BookingRequest*

--
_- lastBookingId : int_
- booking_id : int
- submission_date : Date
- check_in : Date
- check_out : Date
- booking_status : ReservationStatus

--
+ submit() : void
+ cancelRequest() : void
+ confirm() : void
+ declineRequest() : void
- notifyUser(user : User, Title : String, Desc : String) : void
- daysBetween(start : Date, end : Date) : int
+ getBookingId() : int
+ setBookingId(booking_id : int) : void
+ getSubmission_date() : Date
+ setSubmission_date(submission_date : Date) : void
+ getCheck_in() : Date
+ setCheck_in(check_in : Date) : void
+ getCheck_out() : Date
+ setCheck_out(check_out : Date) : void
+ getBooking_status() : ReservationStatus
+ setBooking_status(booking_status : ResrvationStatus) : void
+ getListing() : Listing
+ setListing(listing : Listing) : void
+ getTenant() : Tenant
+ setTenant(tenant : Tenant) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>312</x><y>733</y><w>400</w><h>392</h></coordinates><panel_attributes>
*Listing*

--
- last_listing_ID: int
    - listing_id: int
    - title: String
    - description: String
    - price: double
    - promoted: boolean
    - rating: double
    - photos: String[]
    - calendar: Calendar
    - owner: Owner
    - original_Price: double
    - updated_Price: double
    - chargingPolicies: ArrayList&lt;ChargingPolicy&gt;
    - services: ArrayList&lt;ListingsServices&gt;
    - monthlyIncome: HashMap&lt;String, Double&gt;
    - monthlyCancellations: HashMap&lt;String, Integer&gt;

--
    + Listing(title: String, description: String, price: double, promoted: boolean, rating: double, photos: String[], calendar: Calendar, owner: Owner, apartment: Apartment)
    + Listing(listing: Listing)
    + Listing()
    + getApartment(): Apartment
    + setApartment(apartment: Apartment): void
    + getListing_id(): int
    + setListing_id(listing_id: int): void
    + getTitle(): String
    + setTitle(title: String): void
    + getDescription(): String
    + setDescription(description: String): void
    + getPrice(): double
    + setPrice(price: double): void
    + isPromoted(): boolean
    + setPromoted(promoted: boolean): void
    + getRating(): double
    + setRating(rating: double): void
    + getPhotos(): String[]
    + setPhotos(photos: String[]): void
    + getCalendar(): Calendar
    + setCalendar(calendar: Calendar): void
    + getOwner(): Owner
    + setOwner(owner: Owner): void
    + getChargingPolicies(): ArrayList&lt;ChargingPolicy&gt;
    + setChargingPolicies(chargingPolicies: ArrayList&lt;ChargingPolicy&gt;): void
    + getOriginal_Price(): double
    + setOriginal_Price(original_Price: double): void
    + getUpdated_Price(): double
    + setUpdated_Price(updated_Price: double): void
    + getServices(): ArrayList&lt;ListingsServices&gt;
    + setServices(services: ArrayList&lt;ListingsServices&gt;): void
    + getMonthlyIncome(): HashMap&lt;String, Double&gt;
    + setMonthlyIncome(monthlyIncome: HashMap&lt;String, Double&gt;): void
    + getMonthlyCancellations(): HashMap&lt;String, Integer&gt;
    + setMonthlyCancellations(monthlyCancellations: HashMap&lt;String, Integer&gt;): void
    + addNewChargingPolicies(cPolicy: ChargingPolicy): void
    + updatePriceDueToPolicy(): void
    + addService(listingsServices: ListingsServices): void
    + updatePriceDueToServices(): void
    + addChargingPolicy(cPolicy: ChargingPolicy): void
    + calculateOccupancy(date: java.util.Calendar): double
    + calculateMonthlyIncome(date: Date): void
    + calculateCancellationsPerMonth(date: Date): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>124</x><y>445</y><w>296</w><h>96</h></coordinates><panel_attributes> Tenant  
--
-bookingRequests: ArrayList&lt;BookingRequest&gt; 
 -bookings: ArrayList&lt;Booking&gt;
--
+Tenant(firstName: String, lastName: String, email: EmailAddress, password: Password, creditCard: CreditCard, acc_bday: Date) 
+Tenant(f_n: String, l_n: String) 
+makeBookingRequest(listing: Listing, checkIn: Date, checkOut: Date): BookingRequest 
+cancelBookingRequest(booking_request: BookingRequest): void 
+cancelBooking(booking: Booking): void 
+deleteBookingById(bookingId: int): void 
+GetBookings(): ArrayList&lt;Booking&gt; 
+addBooking(booking: Booking): void 
+getBookings(): ArrayList&lt;Booking&gt; 
 +addBookingRequest(bookingRequest: BookingRequest): void 
+getBookingRequests(): ArrayList&lt;BookingRequest
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>772</x><y>733</y><w>160</w><h>184</h></coordinates><panel_attributes> Booking  
--
- isCancelled: boolean                 
- bookingRequest: BookingRequest       
- apartmentRating: int 
--
+ Booking(bookingRequest: BookingRequest) 
+ isActive(): boolean                   
+ rateApartment(rating: int): void      
+ isStayCompleted(): boolean            
+ getApartmentRating(): int             
+ isCancelled(): boolean                
+ cancel(): void                        
+ calculateRefundAmount(): double      
+ getBookingStatus(): ReservationStatus 
+ notifyUser(user: User, title: String, desc: String): void 
+ daysBetween(start: Date, end: Date): long 
+ daysUntilCheckIn(currentDate: Date): long 
+ getId(): int                          
+ getCheckIn(): Date                    
+ getCheckOut(): Date                   
+ getTenant(): Tenant                   
+ getListing(): Listing                 
+ setId(id: int): void                  
+ setCheckIn(checkIn: Date): void       
+ setCheckOut(checkOut: Date): void     
+ setTenant(tenant: Tenant): void       
+ setListing(listing: Listing): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>572</x><y>317</y><w>220</w><h>164</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;10;530;390</additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>321</y><w>196</w><h>132</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>470;10;10;310</additional_attributes></element><element><id>Relation</id><coordinates><x>236</x><y>537</y><w>16</w><h>68</h></coordinates><panel_attributes>lt=-
m1=1
m2=*</panel_attributes><additional_attributes>10;10;10;150</additional_attributes></element><element><id>Relation</id><coordinates><x>236</x><y>785</y><w>84</w><h>80</h></coordinates><panel_attributes>lt=-
m1=*
m2=1</panel_attributes><additional_attributes>10;10;10;170;190;170</additional_attributes></element><element><id>Relation</id><coordinates><x>708</x><y>849</y><w>72</w><h>16</h></coordinates><panel_attributes>lt=-
m1=1
m2=*</panel_attributes><additional_attributes>10;10;160;10</additional_attributes></element><element><id>Relation</id><coordinates><x>708</x><y>549</y><w>52</w><h>280</h></coordinates><panel_attributes>lt=-
m1=1
m2=*</panel_attributes><additional_attributes>100;10;100;670;10;670</additional_attributes></element><element><id>UMLClass</id><coordinates><x>272</x><y>1329</y><w>472</w><h>208</h></coordinates><panel_attributes>
*Apartment*

--
  - location: Address
  - floor: int
  - size: double
  - wifi: boolean
  - balcony: boolean
  - living_room: boolean
  - bathrooms: ArrayList&lt;Bathroom&gt;
  - bedrooms: ArrayList&lt;Bedroom&gt;
  - kitchens: ArrayList&lt;Kitchen&gt;
--
  + Apartment(location: Address, floor: int, size: double, wifi: boolean, balcony: boolean, living_room: boolean, bathrooms: ArrayList&lt;Bathroom&gt;, bedrooms: ArrayList&lt;Bedroom&gt;, kitchens: ArrayList&lt;Kitchen&gt;)
  + getLocation(): Address
  + setLocation(location: Address): void
  + getFloor(): int
  + setFloor(floor: int): void
  + getSize(): double
  + setSize(size: double): void
  + isWifi(): boolean
  + setWifi(wifi: boolean): void
  + isBalcony(): boolean
  + setBalcony(balcony: boolean): void
  + isLiving_room(): boolean
  + setLiving_room(living_room: boolean): void
  + getBathrooms(): ArrayList&lt;Bathroom&gt;
  + setBathrooms(bathrooms: ArrayList&lt;Bathroom&gt;): void
  + getBedrooms(): ArrayList&lt;Bedroom&gt;
  + setBedrooms(bedrooms: ArrayList&lt;Bedroom&gt;): void
  + getKitchens(): ArrayList&lt;Kitchen&gt;
  + setKitchens(kitchens: ArrayList&lt;Kitchen&gt;): void
  + equals(o: Object): boolean
  + hashCode(): int
  </panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>508</x><y>1125</y><w>16</w><h>212</h></coordinates><panel_attributes>lt=-
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;510</additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>1377</y><w>132</w><h>104</h></coordinates><panel_attributes>
*Address*
   
--
   - city: String
   - street: String
   - address_num: String
--
   + Address(city: String, street: String, address_num: String)
   + getCity(): String
   + setCity(city: String): void
   + getStreet(): String
   + setStreet(street: String): void
   + getAddress_num(): String
   + setAddress_num(address_num: String): void
   + equals(o: Object): boolean
   + hashCode(): int
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>128</x><y>1437</y><w>152</w><h>16</h></coordinates><panel_attributes>lt=-
m1=1
m2=*</panel_attributes><additional_attributes>10;10;360;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>784</x><y>977</y><w>116</w><h>108</h></coordinates><panel_attributes>
*ChargingPolicy*

--
- start_index: Date
 - end_index: Date
 - description: String
 - price_diff: double
--
 + ChargingPolicy(Date, Date, String, double)
 + getStart_index(): Date
 + setStart_index(Date): void
 + getEnd_index(): Date
 + setEnd_index(Date): void
 + getDescription(): String
 + setDescription(String): void
 + getPrice_diff(): double
 + setPrice_diff(double): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>708</x><y>1037</y><w>84</w><h>16</h></coordinates><panel_attributes>lt=-
m1=1
m2=*</panel_attributes><additional_attributes>10;10;190;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>560</x><y>1197</y><w>116</w><h>80</h></coordinates><panel_attributes>
*Calendar*

--
- availability: Hashtable&lt;Date, Date&gt;
--
 + Calendar()
 + getAvailability(): Hashtable&lt;Date, Date&gt;
 + setAvailability(Hashtable&lt;Date, Date&gt;): void
 + setUnavailable(Date, Date): void
 + setAvailable(Date, Date): void
 + isAvailable(Date, Date): boolean
 + toString(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>616</x><y>1121</y><w>16</w><h>84</h></coordinates><panel_attributes>lt=-
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;190</additional_attributes></element><element><id>UMLClass</id><coordinates><x>232</x><y>245</y><w>88</w><h>96</h></coordinates><panel_attributes>
*CreditCard*

--
- number: String
- balance: double
--
 + CreditCard(String)
 + CreditCard(String, double)
 + CreditCard()
 + getNumber(): String
 + setNumber(String): void
 + getBalance(): double
 + setBalance(double): void
 + makePayment(double): boolean
 + refund(double): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>316</x><y>285</y><w>120</w><h>16</h></coordinates><panel_attributes>lt=-
m1=1
m2=1</panel_attributes><additional_attributes>280;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>684</x><y>237</y><w>88</w><h>80</h></coordinates><panel_attributes>
*Password*

--
 - password: String
--
 + Password(String)
 + Password()
 + getPassword(): String
 + setPassword(String): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>572</x><y>269</y><w>120</w><h>16</h></coordinates><panel_attributes>lt=-
m1=1
m2=1</panel_attributes><additional_attributes>280;10;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>452</x><y>65</y><w>88</w><h>80</h></coordinates><panel_attributes>
*EmailAddress*

--
 - address: String
--
 + EmailAddress(String)
 + EmailAddress()
 + getAddress(): String
 + setAddress(String): void
 + send(EmailAddress, String, String): int</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>492</x><y>141</y><w>16</w><h>92</h></coordinates><panel_attributes>lt=-
m1=1
m2=1</panel_attributes><additional_attributes>10;10;10;210</additional_attributes></element><element><id>UMLClass</id><coordinates><x>304</x><y>1597</y><w>88</w><h>112</h></coordinates><panel_attributes>
*Bathroom*

--
 - size: double
 - shower: boolean
 - toilet: boolean
 - hairdryer: boolean
--
 + Bathroom(double, boolean, boolean, boolean)
 + getSize(): double
 + setSize(double): void
 + isShower(): boolean
 + setShower(boolean): void
 + isToilet(): boolean
 + setToilet(boolean): void
 + isHairdryer(): boolean
 + setHairdryer(boolean): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>344</x><y>1533</y><w>16</w><h>72</h></coordinates><panel_attributes>lt=-
m1=1
m2=*</panel_attributes><additional_attributes>10;10;10;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>452</x><y>1597</y><w>92</w><h>112</h></coordinates><panel_attributes>
*Bedroom*

--
 - size: double
 - double_beds: int
 - single_beds: int
 - tv: boolean
--
 + Bedroom(double, int, int, boolean)
 + getSize(): double
 + setSize(double): void
 + getDouble_beds(): int
 + setDouble_beds(int): void
 + getSingle_beds(): int
 + setSingle_beds(int): void
 + isTv(): boolean
 + setTv(boolean): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>492</x><y>1533</y><w>16</w><h>72</h></coordinates><panel_attributes>lt=-
m1=1
m2=*</panel_attributes><additional_attributes>10;10;10;160</additional_attributes></element><element><id>UMLClass</id><coordinates><x>608</x><y>1597</y><w>92</w><h>164</h></coordinates><panel_attributes>
*Kitchen*

--
- size: double
 - oven: boolean
 - microwave: boolean
 - refrigerator: boolean
 - toaster: boolean
 - coffee_machine: boolean
 - dining_table: boolean
--
 + Kitchen(double, boolean, boolean, boolean, boolean, boolean, boolean)
 + getSize(): double
 + setSize(double): void
 + isOven(): boolean
 + setOven(boolean): void
 + isMicrowave(): boolean
 + setMicrowave(boolean): void
 + isRefrigerator(): boolean
 + setRefrigerator(boolean): void
 + isToaster(): boolean
 + setToaster(boolean): void
 + isCoffee_machine(): boolean
 + setCoffee_machine(boolean): void
 + isDining_table(): boolean
 + setDining_table(boolean): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>644</x><y>1533</y><w>16</w><h>72</h></coordinates><panel_attributes>lt=-
m1=1
m2=*</panel_attributes><additional_attributes>10;10;10;160</additional_attributes></element></diagram>